# Ignore backup files.
*~
# Ignore Vim swap files.
.*.swp

# Ignore files generated by IDEs.
/.classpath
/.factorypath
/.idea/
/.ijwb/
/.project
/.settings
/.vscode/
/bazel.iml

# Bazel specific ignores
# Ignore all bazel-* symlinks. There is no full list since this can change
# based on the name of the directory bazel is cloned into.
/bazel-*
# Ignore outputs generated during Bazel bootstrapping.
/output/

# Bazel build artifacts (recursively)
bazel-bin/
bazel-out/
bazel-testlogs/
bazel-genfiles/

# C/C++ build artifacts
*.o
*.obj
*.so
*.a
*.lib
*.dll
*.dylib
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
*.elf
*.map
*.suo
*.pdb
*.idb
*.ilk
*.pch
*.ncb
*.sdf
*.opt
*.plg

# Rust/Cargo build files 
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Rust-specific files
*.rs.bk

# Visual Studio Code files
.vscode/
*.code-workspace

# Ignore editor backup, swap, and lock files
*~
*.swp
*.lock
*.tmp
*.old
*.bak

# Ignore OS generated files
.DS_Store
Thumbs.db
